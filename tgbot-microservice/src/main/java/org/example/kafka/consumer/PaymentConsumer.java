package org.example.kafka.consumer;

import com.fasterxml.jackson.core.JsonProcessingException;
import lombok.RequiredArgsConstructor;
import org.example.model.dto.MessagePaymentDto;
import org.example.service.PaymentService;
import org.example.service.TgBotService;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.util.Objects;

@Service
@RequiredArgsConstructor
public class PaymentConsumer {
    private final TgBotService tgBotService;
    private final PaymentService paymentService;

    @KafkaListener(topics = "payments", groupId = "payment-group")
    public void consume(MessagePaymentDto messagePaymentDto) throws JsonProcessingException, TelegramApiException {
        tgBotService.executeMessage("üòâ –î–µ–Ω—å–≥–∏ –ø–æ–ª—É—á–µ–Ω—ã!\n –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª–æ–∂–∏—Ç—å –∏—Ö –∫ —Ç–µ–±–µ –Ω–∞ —Å—á–µ—Ç üòè", Objects.requireNonNull(messagePaymentDto.getChatId()));

        var message = "";
        var yoomoneyPaymentId = paymentService.pay(messagePaymentDto.getPaymentId());
        if (yoomoneyPaymentId.startsWith("failed:")) {
            message = "üòß –û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫!\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø–æ–¥–¥–µ—Ä–∂–∫–µ\n"
                    + yoomoneyPaymentId;
        } else {
            message = "üéâ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! üéâ\n–û–ø–µ—Ä–∞—Ü–∏—è –≤ –ÆMoney: " + yoomoneyPaymentId;
        }

        message += "\n–û–ø–µ—Ä–∞—Ü–∏—è –≤ —Å–µ—Ä–≤–∏—Å–µ: " + messagePaymentDto.getPaymentId();

        tgBotService.executeMessage(message, Objects.requireNonNull(messagePaymentDto.getChatId()));
    }
}
