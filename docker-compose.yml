volumes:
  payment-db:
  cloudpub-config:
services:
  payment-db:
    image: 'postgres:latest'
    container_name: 'payment-db'
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - 'POSTGRES_USER=${DB_USERNAME}'
      - 'POSTGRES_PASSWORD=${DB_PASSWORD}'
      - 'POSTGRES_DB=${DB_NAME}'
    volumes:
      - payment-db:/var/lib/postgresql/data

  crud-microservice:
      container_name: 'crud-microservice'
      image: 'crud-microservice'
      build:
        context: ./
        dockerfile: 'crud-microservice/Dockerfile'
      env_file:
        - .env
      environment:
        - JAVA_OPTS=-Xmx512M
        - SPRING_DATASOURCE_URL=${DB_LINK_BACK}
        - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
        - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      ports:
        - "8080:8080"
      restart: on-failure

  cloudpub:
    image: cloudpub/cloudpub:latest-arm64
    restart: unless-stopped
    environment:
      - TOKEN=${CLOUDPUB_API_KEY}
      - HTTP=crud-microservice:8080
    command: run
    depends_on:
      - crud-microservice
    volumes:
      - cloudpub-config:/home/cloudpub

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
